PRO compare_aggregate_2_SPOT
;compare aggregate results (as .csv from Anton's code) against GIMMS 
;Note that GIMMS is multiplied by 10 because Anton divided by 10 to keept it as integer 
CLOSE, /ALL
;***********************************************************
; set pah and file_names
path = 'K:\ILRI\Comparison results\aggregate files'
gimms_base_fn = 'aggregated_SPOT.csv';'GIMMS.csv'
archives_base_fn = ['aggregated_MODIS_C5_TERRA.csv','aggregated_BOKU_C5_TERRA.csv','aggregated_BOKU_C5_TERRAandAQUA.csv', 'aggregated_eMODIS.csv']     ;file names of the archives to be compared against gimms
; number of periods summed to get the cumulative values [GIMMS, MODIS_C5_Terra, BOKU_C5_TERRA, BOKU_C5_TERRAandAQUA] 
n_obs_long =  FLOAT([21,13,13,26,21]);FLOAT([14,13,13,26,21,21])
n_obs_short = FLOAT([15,10,10,20,15]) ;FLOAT([10,10,10,20,15,15]) 
which = ['cumNDVI','maxNDVI']                   ; select which to aggregate
which = which[0]
doplot = 0
;***********************************************************


; adjust names according to which
gimms_fn = path + '\'+ which + '_' + gimms_base_fn
archives_fn = path + '\'+ which + '_' + archives_base_fn
outFile = path + '\Results\' + which + '_GLOBcomp2SPOT_1.csv' ;regressions at the global level, both cum and average  
outFile2 = path + '\Results\'+ which + '_DIVcomp2SPOT_1.csv' ;regressions at the division level, both cum and average

;open outputs
IF FILE_TEST(outFile) eq 1 THEN FILE_DELETE, outFile
OPENW, W1, outFile, /GET_LUN
PRINTF, W1, 'Archive(dependent var),L+S R2,L+S R2cv,L+S R2cv_withinDiv,L+S R2cv_withinDivSeas,L+S gain,L+S offset,L R2,L R2cv,L R2cv_within,L gain,L offset,S R2,S R2cv,S R2cv_within,S gain,S offset' 

IF FILE_TEST(outFile2) eq 1 THEN FILE_DELETE, outFile2
OPENW, W2, outFile2, /GET_LUN
PRINTF, W2, 'Archive(dependent var),DIV_ID,L+S R2,L+S R2cv,L+S R2cv_within,L+S DSP_ModelR2cv,L+S gain,L+S offset,' + $
                                          'L R2,L NP_ModelR2cv,L SP_ModelR2cv,L p-val (SPdiffNP), L gain,L offset,' + $
                                          'S R2,S NP_ModelR2cv,S SP_ModelR2cv,S p-val (SPdiffNP),S gain,S offset'

years_mat = 1981 + INDGEN(33)  ;1981-2013
gimms_mat_Long = FLTARR(N_ELEMENTS(years_mat), 108)*0-999  ; dim 2 is divisions
gimms_mat_Short = FLTARR(N_ELEMENTS(years_mat), 108)*0-999  ; dim 2 is divisions

;loop on different archives to be tested against GIMMS
FOR i = 0, N_ELEMENTS(archives_fn) -1 DO BEGIN
  ytitle = STRMID(archives_base_fn[i], 11, STRLEN(archives_base_fn[i])-15)
  ;open read GIMMS
  read_file, gimms_fn, gimms_mat_Long, gimms_mat_Short, years_mat
    
  ;open read other archive
  archive_mat_Long = gimms_mat_Long * 0 - 999
  archive_mat_Short = gimms_mat_Short * 0 - 999
  read_file, archives_fn[i], archive_mat_Long, archive_mat_Short, years_mat 
  
  ;extract the overallapping period, reduced to a common period 
  ;ranging from 2001 Long to 2011 Long to restrict it to eMODIS range
  ;Note that BOKU terra&aqua will have less data (it starts in 2002)
  indL = WHERE((archive_mat_Long[*,0] NE -999) AND (gimms_mat_Long[*,0] NE -999) $
                AND (years_mat GE 2001) AND (years_mat LE 2011))
  indS = WHERE((archive_mat_Short[*,0] NE -999) AND (gimms_mat_Short[*,0] NE -999)$
                AND (years_mat GE 2001) AND (years_mat LE 2010))
  
  ;in the last version GIMMS, SPOT and eMODIS, they are in NDVI units, make the other archive in NDVI units as well
  IF NOT((archives_base_fn[i] EQ 'aggregated_eMODIS.csv') OR (archives_base_fn[i] EQ 'aggregated_SPOT.csv')) THEN BEGIN
    archive_mat_Long[indL,*] =  FLOAT(archive_mat_Long[indL,*])  /10000.0
    archive_mat_Short[indS,*] = FLOAT(archive_mat_Short[indS,*]) /10000.0
  ENDIF
  
  ;In the case of cumulated NDVI consider the cumulation and the mean
  ;here below we set the denominator (01 for the cum, = nobs in the two seasons for the mean)
  IF (which EQ 'cumNDVI') THEN BEGIN
    n_obs_long_archive = FLOAT([1, n_obs_long[i+1]])
    n_obs_short_archive = FLOAT([1, n_obs_short[i+1]]) 
    n_obs_long_gimms = FLOAT([1, n_obs_long[0]])
    n_obs_short_gimms = FLOAT([1, n_obs_short[0]])
    title = [archives_base_fn[i], 'average_' + archives_base_fn[i]]
  ENDIF ELSE BEGIN
    n_obs_long_archive = 1.0
    n_obs_short_archive = 1.0
    n_obs_long_gimms = 1.0
    n_obs_short_gimms = 1.0
    title = archives_base_fn[i]
  ENDELSE
  
  ;loop on the two cases of cumulated NDVI: the cumulation and the mean
  FOR j=0, N_ELEMENTS(n_obs_long_archive)-1 DO BEGIN
    PRINT, 'Analyzing -- ' + title[j] 
    ;compute and print stats
    IF (doplot EQ 1) THEN BEGIN
      window, /FREE, TITLE=title[j], XSIZE = 1200, YSIZE = 400
      !P.Multi=[0,3,1]
    ENDIF
  
    ;CASE 1: long and short toghether
    y = [archive_mat_Long[indL, *]/n_obs_long_archive[j],archive_mat_Short[indS, *]/n_obs_short_archive[j]]
    x = [gimms_mat_Long[indL, *]/n_obs_long_gimms[j],gimms_mat_Short[indS, *]/n_obs_short_gimms[j]]
    ;GLOBAL Stats
    ;compute cross val R2 leaving one full year out
    CVresLS = crossValRes(x, y, [years_mat[indL],years_mat[indS]])
    ;remove effect of division
    CV_within_resLS = crossValWithinRes(x, y, [years_mat[indL],years_mat[indS]])
    ;remove effect of division and season
    CV_withinDivAndSeason_resLS = crossValWithinDivAndSeasonRes(x, y, [years_mat[indL],years_mat[indS]], [years_mat[indL]*0+0,years_mat[indS]*0+1])
    R2cvDSPmodel_div_level = CV_withinDivAndSeason_resLS[1 : N_ELEMENTS(CV_withinDivAndSeason_resLS)-1]
    DIVresWithinLS = CV_withinDivAndSeason_resLS[0]
    ;compute fitting stats
    dims = SIZE(y)
    FITresLS = FitRes(REFORM(x, dims[1]*dims[2], 1),  REFORM(y, dims[1]*dims[2], 1), doplot, which + ' Long + Short')
    ;DIV STATS
    ;R2 cv of the SP model
    DIVresLS = predDIVres(x, y, [years_mat[indL],years_mat[indS]])
    ;R2cv of the SP model when applyed by season
    DIVresWithinLS = DivWithinRes(x, y, [years_mat[indL],years_mat[indS]], [years_mat[indL]*0+0,years_mat[indS]*0+1]);pass a seson identificator
    ;resduals of pooled applied to seasons are stored in
    ;DIVresWithinLS.residualsL[*,i]=rescv_within.residulas[0,*]
    ;DIVresWithinLS.residualsS[*,i]=rescv_within.residulas[1,*]
  
    ;CASE 1: only long             
    y = archive_mat_Long[indL, *]/n_obs_long_archive[j]
    x = gimms_mat_Long[indL, *]/n_obs_long_gimms[j]
    ;GLOBAL Stats
    ;compute cross val R2 leaving one full year out
    CVresL = crossValRes(x,y,years_mat[indL])
    CV_within_resL = crossValWithinRes(x, y, years_mat[indL])
    ;compute fitting stats
    dims = SIZE(y)
    FITresL = FitRes(REFORM(x, dims[1]*dims[2], 1),  REFORM(y, dims[1]*dims[2], 1), doplot, which + ' Long ')
    ;DIV STATS
    ;R2 of the NP model
    DIVresL = predDIVres(x, y, years_mat[indL])
    ;the residuals are in
    ;DIVresL.residuals[i,*]
    ;COMMENT/UNCOMMENT TO MAKE THE ANALYS OF THE LONG
    ;plotcolor, gimms_mat_Long[indL, *], archive_mat_Long[indL, *],  which + ' Long '
    
    ;CASE 3: only short
    y = archive_mat_Short[indS, *]/n_obs_short_archive[j]
    x = gimms_mat_Short[indS, *]/n_obs_short_gimms[j]
    ;GLOBAL Stats
    ;compute cross val R2 leaving one full year out
    CVresS = crossValRes(x,y,years_mat[indS])
    CV_within_resS = crossValWithinRes(x, y, years_mat[indS])
    ;compute fitting stats
    dims = SIZE(y)
    FITresS = FitRes(REFORM(x, dims[1]*dims[2], 1),  REFORM(y, dims[1]*dims[2], 1), doplot,  which + ' Short ')
    ;DIV STATS
    ;R2 of the NP model
    DIVresS = predDIVres(x, y, years_mat[indS])
    ;the residuals are in
    ;DIVresS.residuals[i,*]
    
    ;Print to file 
    ;GLOBAL STATS 
    PRINTF, W1, title[j] + ',' + STRTRIM(FITresLS[0],2) + ',' + STRTRIM(CVresLS.r2cv,2) + ',' + STRTRIM(CV_within_resLS.cvr2_within,2) + ',' + STRTRIM(CV_withinDivAndSeason_resLS[0])+ ',' + STRTRIM(FITresLS[1],2) + ',' + STRTRIM(FITresLS[2],2) + ',' + $
                                 STRTRIM(FITresL[0],2) +  ',' + STRTRIM(CVresL.r2cv,2)  + ','  + STRTRIM(CV_within_resL.cvr2_within,2) + ','+ STRTRIM(FITresL[1],2) + ','  + STRTRIM(FITresL[2],2) +  ',' + $
                                 STRTRIM(FITresS[0],2) +  ',' + STRTRIM(CVresS.r2cv,2)  + ','  + STRTRIM(CV_within_resS.cvr2_within,2) + ','+ STRTRIM(FITresS[1],2) + ','  + STRTRIM(FITresS[2],2)                                
    ;DIV STATS
    FOR k = 0, dims[2]-1 DO BEGIN
      ;for each division test that the SP model applied at the seosn level is sifnificantly different from the NP model (by season)
      ;Long test
      resTestL = testModel(REFORM(DIVresWithinLS.residualsL[*,k]),REFORM(DIVresL.residuals[k,*]))
      resTestS = testModel(REFORM(DIVresWithinLS.residualsS[*,k]),REFORM(DIVresS.residuals[k,*]))
      ;a P <0.05 meand that there is correlation, and r2SP is different from r2NP
      PRINTF, W2, title[j] + ',' + STRTRIM(DIVresLS.id[k], 2) +  ',' + $
                  STRTRIM(DIVresLS.r2[k], 2) +  ','  + STRTRIM(DIVresLS.r2cv[k], 2) +  ','  + STRTRIM(DIVresWithinLS.r2cv_within[k],2) + ',' + STRTRIM(R2cvDSPmodel_div_level[k],2) + ',' + STRTRIM(DIVresLS.gain[k], 2) +  ','  + STRTRIM(DIVresLS.offset[k], 2) +  ',' + $
                  STRTRIM(DIVresL.r2[k], 2)  +  ','  + STRTRIM(DIVresL.r2cv[k], 2)  +  ','  + STRTRIM(DIVresWithinLS.r2cv_pooled_on_group[0,k],2) + ',' + STRTRIM(resTestL,2) +       ',' + STRTRIM(DIVresL.gain[k], 2)  +  ','  + STRTRIM(DIVresL.offset[k], 2)  +  ',' + $                         
                  STRTRIM(DIVresS.r2[k], 2)  +  ','  + STRTRIM(DIVresS.r2cv[k], 2)  +  ','  + STRTRIM(DIVresWithinLS.r2cv_pooled_on_group[1,k],2) + ',' + STRTRIM(resTestS,2) +       ',' + STRTRIM(DIVresS.gain[k], 2)  +  ','  + STRTRIM(DIVresS.offset[k], 2)
    ENDFOR
  ENDFOR
ENDFOR

FREE_LUN, W1
FREE_LUN, W2

END